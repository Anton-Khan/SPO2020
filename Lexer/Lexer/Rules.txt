


	new	
lang -> expr+
expr -> assign_expr|if_expr|while_expr



assign_expr -> VAR ASSIGN_OP value_expr


value_expr -> value (OP value)* 

bracket_body -> L_B value_expr R_B

value -> VAR|DIGIT|bracket_body


if_expr -> IF_KW if_head if_body
if_head -> L_B logic_comp R_B
if_body -> L_SB expr+ R_SB

while_expr -> WHILE_KW while_head while_body
while_head -> L_B logic_comp R_B
while_head -> L_SB expr+ R_SB

logic_comp -> value_expr COMPARE_OP value_expr
compare_var -> value|value_expr


VAR -> ^([a-zA-Z]+)$
DIGIT -> ^(0|[1-9][0-9]*)$
ASSIGN_OP -> ^=$
OP -> ^(\+|-|\*|\/)$
IF_KW -> ^if$
WHILE_KW -> ^while$
L_B -> ^\($
R_B -> ^\)$
L_SB -> ^\{$
R_SB -> ^\}$
COMPARE_OP -> ^(>=|<=|>|<|!=|==)$

